T = int(input())

for tc in range(1, T+1):
    str1 = input() # 작은 문자열
    str2 = input() # 큰 문자열
    #str2 안에 str1과 일치하는 부분이 있는가?
    N = len(str1) # 작은 문자열의 길이
    M = len(str2) # 큰 문자열의 길이

    # 일치하는 경우 < 불일치하는 경우
    # 답이 일치하는 경우가 없다라고 가정
    answer = 0

    # 작은 친구의 인덱스는 0,1,2 반복
    # 큰 친구의 인덱스로부터 얼마나 떨어졌는가를 상징하는 게 작은 친구 인덱스가 되는 것

    # 기준 위치 제한 가능(큰 사각형 내 작은 사각형 개념 활용)

    # 큰 문자열의 인덱스를 비교 시작 위치(기준 위치로) 잡는다
    # 작은 문자열을 한칸씩 밀면서 비교 할건데
    # 밀고 나서 큰 문자열의 범위를 벗어나면 안되니 M-N+1까지
    for i in range(M-N+1):
        # i : 비교를 시작하는 기준 위치(큰 문자열)
        # ㅑ 에서 _칸 떨어진 문자(큰 문자열)
        # 0번 인덱스에 있는 문자(작은 문자열)
        # 요 두 개 비교해서 일치하는가 확인
        # ...반복 (자세한 주석은 강사님 코드에서 보강)

        # 기준 인덱스(i)에서 몇 칸 떨어져 있는지를 나타내는 j
        # j는 또한 작은 문자열 입장에서는 문자의 인덱스도 나타낸다
        for j in range(N):
            # 큰 문자열의 기준위치(i)에서 j칸 떨어진 곳에 있는 문자와
            # 작은 문자열의 j번 인덱스 비교
            if str2[i+j] != str1[j]:
                # 불일치 발생하면
                # 이 뒤 문자는 비교할 필요 없으니 반복 중단
                break

        # 중간에 반복문이 중단된 적이 없으면 실행되는 코드 블록
        # break 키워드를 만난 적 없으면 실행
        else:
            answer = 1

    print(f"#{tc} {answer}")

